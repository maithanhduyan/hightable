version: '3.8'

services:
  hightable_backend:
    build: .
    container_name: hightable-backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      # REDIS_URL: redis://redis:6379
    depends_on:
      - db
      - redis
    networks:
      - continental 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.localhost`)"
      - "traefik.http.services.backend.loadbalancer.server.port=3000"

  db:
    image: postgres:17
    container_name: db
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - continental 

  redis:
    image: redis:7
    container_name: redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - continental 

  traefik:
    image: traefik:v3.4.0
    container_name: traefik
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      # - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - continental 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.mastervip.vn`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=authtraefik"
      - "traefik.http.middlewares.authtraefik.basicauth.users=admin:$apr1$APGEpVfQ$rb1IcWoFdU1SGkQFKogGw1"

volumes:
  postgresql_data:
  redis_data:

networks:
  continental :
    external: true

# Create networks
# docker network create continental